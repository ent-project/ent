
allprojects {

    apply plugin: 'java'
    apply plugin: 'eclipse'

    eclipse {
        classpath {
            downloadJavadoc = true
            downloadSources = true
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_20
    targetCompatibility = JavaVersion.VERSION_20
}

ext {
    mockitoVersion = '4.5.1'
    junitVersion = '5.8.2'
    guavaVersion = '31.1-jre'
    apacheCommonsLangVersion = '3.12.0'
}

subprojects {

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation group: 'org.slf4j', name:'slf4j-api', version: '1.7.36'
        implementation group: 'ch.qos.logback', name:'logback-classic', version: '1.2.11'
        implementation group: 'ch.qos.logback', name:'logback-core', version: '1.2.11'

        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: junitVersion
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: junitVersion
        testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.15.0'
        testImplementation group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version: '3.10'
        testImplementation group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
        testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: mockitoVersion
        testImplementation group: 'org.mockito', name: 'mockito-inline', version: mockitoVersion
    }

    test {
        useJUnitPlatform()
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs += '--enable-preview'
    }

    tasks.withType(JavaExec) {
        jvmArgs += "--enable-preview"
    }

    tasks.withType(Test) {
        jvmArgs += "--enable-preview"
    }
}

// task for gradle wrapper upgrade: change gradleVersion here, then run "./gradlew wrapper"
tasks.named('wrapper') {
   gradleVersion = '8.2'
   distributionType = Wrapper.DistributionType.ALL
}
